
Methodology
===========

PV Atlas results are generated by simulating PV system performance for
many locations and scenarios.  This requires scalable performance modeling
software and 

These enormous files are processed on a high-performance computing (HPC)
cluster at `Sandia National Laboratories <https://hpc.sandia.gov/>`_.



Data
----

NSRDB PSM3 v3.2.2

The high-resolution of the NSRDB gridded weather and irradiance data
requires a large amount of storage and computational capacity to process.
To give a sense of scale, efficient HDF5 files with one year of data for
covering full spatial extent of the NSRDB are about `1.5 TB in size <https://data.openei.org/s3_viewer?bucket=nrel-pds-nsrdb&prefix=current%2F>`_.


Software
--------
Free and open-source software is a key enabler of modern scientific computing.
This project uses many open-source software packages, including:

- `pvlib <https://pvlib-python.readthedocs.io>`_: PV performance modeling
- `RdTools <https://rdtools.readthedocs.io>`_: performance loss rate estimation
- `leaflet <https://leaflet.js/>`_ and `cartopy <https://scitools.org.uk/cartopy/docs/latest/>`_: mapping
- `matplotlib <https://matplotlib.org/>`_: plotting
- `pandas <https://pandas.pydata.org/docs>`_ and `numpy <https://numpy.org/doc/stable/>`_: number crunching
- `sphinx <https://www.sphinx-doc.org>`_, `sphinx-book-theme <https://sphinx-book-theme.readthedocs.io>`_: building this website
- `rasterio <https://rasterio.readthedocs.io>`_ and `GDAL <https://gdal.org/index.html>`_: geospatial rasters
- `python <https://www.python.org>`_: the foundation of all of the above
- and many others


Outputs
-------
GeoTIFF


References
----------

.. bibliography::
   :list: enumerated

   Sengupta2018
   Holmgren2018
   